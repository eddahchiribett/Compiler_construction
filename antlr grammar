// DELETE THIS CONTENT IF YOU PUT COMBINED GRAMMAR IN Parser TAB
lexer grammar ExprLexer;

LOGICAL_AND : '&&' ;
LOGICAL_OR : '||' ;
LOGICAL_NOT : '!' ;
ASSIGN : '=' ;
COMMA : ',' ;
SEMICOLON : ';' ;
LPAREN : '(' ;
RPAREN : ')' ;
LBRACE : '{' ;
RBRACE : '}' ;
L_BRACKET : '[' ;
R_BRACKET : ']' ;
EQUALS : '==';
TYPE_INT: 'int';
TYPE_FLOAT: 'float';
TYPE_BOOL: 'bool';
TYPE_STRING:  'string';
WHILE : 'while';

ELSE :'else';
DO:'do';
FOR:'for';
IF : 'if';
PRINT :'print';
INPUT :'input';
ELSE_IF:'else if';
TRUE:'true';
FALSE:'false';
VOID: 'void';
MAIN:'main';
RETURN :'return';


MINUS :'-';
PLUS: '+';
MULTIPLY: '*';
DIVIDE :'/';
BACKSLASH: '\\';
MODULUS: '%';
NOT_EQUALS:'!=';
LESS_THAN:'<';
GREATER_THAN:'>';
LESS_THAN_OR_EQUAL:'<=';
GREATER_THAN_OR_EQUAL:'>=';


INT : [-+]? [0-9]+ ;
FLOAT: [-+]? [0-9]+.[0-9]+;
IDENTIFIER : [a-zA-Z_][a-zA-Z_0-9]* ;
WS: [ \t\n\r\f]+ -> skip ;







