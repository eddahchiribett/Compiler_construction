program : function main_function
        | main_function
main_function : TYPE_INT MAIN LPAREN RPAREN LBRACE statement_list RBRACE
statement_list : statement
               | statement statement_list
statement : expression_statement
              | control_statement
              | return_statement
              | print_statement
expression_statement : expression SEMICOLON
control_statement : if_statement
                      | while_statement
                      | do_while_statement
type_keyword : TYPE_INT
                 | TYPE_BOOL
                 | TYPE_FLOAT
if_statement : IF LPAREN expression RPAREN LBRACE statement RBRACE
                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELIF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
while_statement : WHILE LPAREN expression RPAREN LBRACE statement RBRACE
do_while_statement : DO LBRACE statement RBRACE WHILE LPAREN expression RPAREN
return_statement : RETURN LPAREN INTEGER RPAREN SEMICOLON
                        | RETURN LPAREN FLOAT RPAREN SEMICOLON
                        | RETURN LPAREN TRUE RPAREN SEMICOLON
                        | RETURN LPAREN FALSE RPAREN SEMICOLON
print_statement : PRINT LPAREN STRING RPAREN SEMICOLON
expression  : assignment_expression
            | logical_expression
            | unary_expression
            | arithmetic_expression
            | relational_expression
            | equality_expression
arithmetic_expression   : IDENTIFIER PLUS IDENTIFIER
                        | IDENTIFIER PLUS INTEGER
                        | IDENTIFIER MODULUS IDENTIFIER
                        | IDENTIFIER MINUS IDENTIFIER
                        | IDENTIFIER MINUS INTEGER
                        | IDENTIFIER MINUS FLOAT
                        | IDENTIFIER MODULUS INTEGER
                        | IDENTIFIER MULTIPLY IDENTIFIER
                        | IDENTIFIER MULTIPLY INTEGER
                        | IDENTIFIER MULTIPLY FLOAT
                        | IDENTIFIER DIVIDE IDENTIFIER
                        | IDENTIFIER DIVIDE INTEGER
                        | IDENTIFIER DIVIDE FLOAT
                        | INTEGER PLUS INTEGER
                        | INTEGER PLUS IDENTIFIER
                        | INTEGER MODULUS IDENTIFIER
                        | INTEGER MODULUS INTEGER
assignment_expression : type_keyword IDENTIFIER ASSIGN INTEGER
                      | type_keyword IDENTIFIER ASSIGN FLOAT
                      | type_keyword IDENTIFIER ASSIGN TRUE
                      | type_keyword IDENTIFIER ASSIGN FALSE
                      | type_keyword IDENTIFIER ASSIGN arithmetic_expression
                      | type_keyword IDENTIFIER ASSIGN function_call
                      | IDENTIFIER ASSIGN INTEGER
                      | IDENTIFIER ASSIGN FLOAT
                      | IDENTIFIER ASSIGN TRUE
                      | IDENTIFIER ASSIGN FALSE
                      | IDENTIFIER ASSIGN arithmetic_expression
                      | IDENTIFIER ASSIGN function_call
logical_expression : logical_or_expression
                   | logical_and_expression
                   | logical_not_expression
logical_or_expression   : IDENTIFIER LOGICAL_OR IDENTIFIER
                        | IDENTIFIER LOGICAL_OR relational_expression
                        | IDENTIFIER LOGICAL_OR equality_expression
                        | relational_expression LOGICAL_OR IDENTIFIER
                        | relational_expression LOGICAL_OR relational_expression
                        | relational_expression LOGICAL_OR equality_expression
                        | equality_expression LOGICAL_OR IDENTIFIER
                        | equality_expression LOGICAL_OR relational_expression
                        | equality_expression LOGICAL_OR equality_expression
logical_and_expression : IDENTIFIER LOGICAL_AND IDENTIFIER
                       | IDENTIFIER LOGICAL_AND relational_expression
                       | IDENTIFIER LOGICAL_AND equality_expression
                       | relational_expression LOGICAL_AND IDENTIFIER
                       | relational_expression LOGICAL_AND relational_expression
                       | relational_expression LOGICAL_AND equality_expression
                       | equality_expression LOGICAL_AND IDENTIFIER
                       | equality_expression LOGICAL_AND relational_expression
                       | equality_expression LOGICAL_AND equality_expression
logical_not_expression  : LOGICAL_NOT logical_and_expression
                        | LOGICAL_NOT logical_or_expression
                        | LOGICAL_NOT IDENTIFIER
                        | LOGICAL_NOT equality_expression
                        | LOGICAL_NOT relational_expression
equality_expression : IDENTIFIER EQUALS IDENTIFIER
                    | IDENTIFIER EQUALS INTEGER
                    | IDENTIFIER EQUALS FLOAT
                    | IDENTIFIER EQUALS TRUE
                    | IDENTIFIER EQUALS FALSE
                    | IDENTIFIER NOT_EQUALS IDENTIFIER
                    | IDENTIFIER NOT_EQUALS INTEGER
                    | IDENTIFIER NOT_EQUALS FLOAT
                    | IDENTIFIER NOT_EQUALS TRUE
                    | IDENTIFIER NOT_EQUALS FALSE
relational_expression   : IDENTIFIER GREATER_THAN IDENTIFIER
                        | IDENTIFIER GREATER_THAN INTEGER
                        | IDENTIFIER GREATER_THAN FLOAT
                        | IDENTIFIER LESS_THAN IDENTIFIER
                        | IDENTIFIER LESS_THAN INTEGER
                        | IDENTIFIER LESS_THAN FLOAT
                        | IDENTIFIER LESS_THAN_OR_EQUAL IDENTIFIER
                        | IDENTIFIER LESS_THAN_OR_EQUAL INTEGER
                        | IDENTIFIER LESS_THAN_OR_EQUAL FLOAT
                        | IDENTIFIER GREATER_THAN_OR_EQUAL IDENTIFIER
                        | IDENTIFIER GREATER_THAN_OR_EQUAL INTEGER
                        | IDENTIFIER GREATER_THAN_OR_EQUAL FLOAT
                        | INTEGER GREATER_THAN IDENTIFIER
                        | INTEGER GREATER_THAN INTEGER
                        | INTEGER GREATER_THAN FLOAT
                        | INTEGER LESS_THAN IDENTIFIER
                        | INTEGER LESS_THAN INTEGER
                        | INTEGER LESS_THAN FLOAT
                        | INTEGER LESS_THAN_OR_EQUAL IDENTIFIER
                        | INTEGER LESS_THAN_OR_EQUAL INTEGER
                        | INTEGER LESS_THAN_OR_EQUAL FLOAT
                        | INTEGER GREATER_THAN_OR_EQUAL IDENTIFIER
                        | INTEGER GREATER_THAN_OR_EQUAL INTEGER
                        | INTEGER GREATER_THAN_OR_EQUAL FLOAT
                        | FLOAT GREATER_THAN IDENTIFIER
                        | FLOAT GREATER_THAN INTEGER
                        | FLOAT GREATER_THAN FLOAT
                        | FLOAT LESS_THAN IDENTIFIER
                        | FLOAT LESS_THAN INTEGER
                        | FLOAT LESS_THAN FLOAT
                        | FLOAT LESS_THAN_OR_EQUAL IDENTIFIER
                        | FLOAT LESS_THAN_OR_EQUAL INTEGER
                        | FLOAT LESS_THAN_OR_EQUAL FLOAT
                        | FLOAT GREATER_THAN_OR_EQUAL IDENTIFIER
                        | FLOAT GREATER_THAN_OR_EQUAL INTEGER
                        | FLOAT GREATER_THAN_OR_EQUAL FLOAT
unary_expression  : MINUS number
                  | PLUS number
                  | function_call
                  | IDENTIFIER
                  | LPAREN expression RPAREN
function : type_keyword IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE
         | VOID IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE
function_call : IDENTIFIER LPAREN argument_list RPAREN
argument_list : argument
              | argument COMMA argument_list
argument : type_keyword IDENTIFIER
         | IDENTIFIER
number : INTEGER
       | FLOAT

NB: The words in capital letters are for the terminal symbols in our grammar