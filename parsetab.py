
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICAL_ORleftLOGICAL_ANDleftEQUALSNOT_EQUALSleftLESS_THANLESS_THAN_OR_EQUALGREATER_THANGREATER_THAN_OR_EQUALleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightLOGICAL_NOTASSIGN COMMA DIVIDE DO ELIF ELSE EQUALS FALSE FLOAT GREATER_THAN GREATER_THAN_OR_EQUAL IDENTIFIER IF INTEGER LBRACE LESS_THAN LESS_THAN_OR_EQUAL LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MAIN MINUS MODULUS MULTIPLY NOT_EQUALS PLUS PRINT RBRACE RETURN RPAREN SEMICOLON STRING TRUE TYPE_BOOL TYPE_FLOAT TYPE_INT VOID WHILE\n    program : function main_function\n            | main_function\n    \n    main_function : TYPE_INT MAIN LPAREN RPAREN LBRACE statement_list RBRACE\n    \n    statement_list : statement\n                   | statement statement_list\n    \n    statement : expression_statement\n              | control_statement\n              | return_statement\n              | print_statement\n    \n    expression_statement : expression SEMICOLON\n    \n    control_statement : if_statement\n                      | while_statement\n                      | do_while_statement\n    \n    type_keyword : TYPE_INT\n                 | TYPE_BOOL\n                 | TYPE_FLOAT\n    \n    if_statement : IF LPAREN expression RPAREN LBRACE statement RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELIF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE\n    \n    while_statement : WHILE LPAREN expression RPAREN LBRACE statement RBRACE\n    do_while_statement : DO LBRACE statement RBRACE WHILE LPAREN expression RPARENreturn_statement : RETURN LPAREN INTEGER RPAREN SEMICOLON\n                        | RETURN LPAREN FLOAT RPAREN SEMICOLON\n                        | RETURN LPAREN TRUE RPAREN SEMICOLON\n                        | RETURN LPAREN FALSE RPAREN SEMICOLON\n    \n    print_statement : PRINT LPAREN STRING RPAREN SEMICOLON\n    \n    expression  : assignment_expression\n                | logical_expression\n                | unary_expression\n                | arithmetic_expression\n                | relational_expression\n                | equality_expression\n    \n    arithmetic_expression   : IDENTIFIER PLUS IDENTIFIER\n                            | IDENTIFIER PLUS INTEGER\n                            | IDENTIFIER MODULUS IDENTIFIER\n                            | IDENTIFIER MINUS IDENTIFIER\n                            | IDENTIFIER MINUS INTEGER\n                            | IDENTIFIER MINUS FLOAT\n                            | IDENTIFIER MODULUS INTEGER\n                            | IDENTIFIER MULTIPLY IDENTIFIER\n                            | IDENTIFIER MULTIPLY INTEGER\n                            | IDENTIFIER MULTIPLY FLOAT\n                            | IDENTIFIER DIVIDE IDENTIFIER\n                            | IDENTIFIER DIVIDE INTEGER\n                            | IDENTIFIER DIVIDE FLOAT\n                            | INTEGER PLUS INTEGER\n                            | INTEGER PLUS IDENTIFIER\n                            | INTEGER MODULUS IDENTIFIER\n                            | INTEGER MODULUS INTEGER\n    \n    assignment_expression : type_keyword IDENTIFIER ASSIGN INTEGER\n                          | type_keyword IDENTIFIER ASSIGN FLOAT\n                          | type_keyword IDENTIFIER ASSIGN TRUE\n                          | type_keyword IDENTIFIER ASSIGN FALSE\n                          | type_keyword IDENTIFIER ASSIGN arithmetic_expression\n                          | type_keyword IDENTIFIER ASSIGN function_call\n                          | IDENTIFIER ASSIGN INTEGER\n                          | IDENTIFIER ASSIGN FLOAT\n                          | IDENTIFIER ASSIGN TRUE\n                          | IDENTIFIER ASSIGN FALSE\n                          | IDENTIFIER ASSIGN arithmetic_expression\n                          | IDENTIFIER ASSIGN function_call\n    \n    logical_expression : logical_or_expression\n                       | logical_and_expression\n                       | logical_not_expression\n    \n    logical_or_expression   : IDENTIFIER LOGICAL_OR IDENTIFIER\n                            | IDENTIFIER LOGICAL_OR relational_expression\n                            | IDENTIFIER LOGICAL_OR equality_expression\n                            | relational_expression LOGICAL_OR IDENTIFIER\n                            | relational_expression LOGICAL_OR relational_expression\n                            | relational_expression LOGICAL_OR equality_expression\n                            | equality_expression LOGICAL_OR IDENTIFIER\n                            | equality_expression LOGICAL_OR relational_expression\n                            | equality_expression LOGICAL_OR equality_expression\n    \n    logical_and_expression : IDENTIFIER LOGICAL_AND IDENTIFIER\n                           | IDENTIFIER LOGICAL_AND relational_expression\n                           | IDENTIFIER LOGICAL_AND equality_expression\n                           | relational_expression LOGICAL_AND IDENTIFIER\n                           | relational_expression LOGICAL_AND relational_expression\n                           | relational_expression LOGICAL_AND equality_expression\n                           | equality_expression LOGICAL_AND IDENTIFIER\n                           | equality_expression LOGICAL_AND relational_expression\n                           | equality_expression LOGICAL_AND equality_expression\n    logical_not_expression   : LOGICAL_NOT logical_and_expression\n                                | LOGICAL_NOT logical_or_expression\n                                | LOGICAL_NOT IDENTIFIER\n                                | LOGICAL_NOT equality_expression\n                                | LOGICAL_NOT relational_expression\n    equality_expression : IDENTIFIER EQUALS IDENTIFIER\n                           | IDENTIFIER EQUALS INTEGER\n                           | IDENTIFIER EQUALS FLOAT\n                           | IDENTIFIER EQUALS TRUE\n                           | IDENTIFIER EQUALS FALSE\n                           | IDENTIFIER NOT_EQUALS IDENTIFIER\n                           | IDENTIFIER NOT_EQUALS INTEGER\n                           | IDENTIFIER NOT_EQUALS FLOAT\n                           | IDENTIFIER NOT_EQUALS TRUE\n                           | IDENTIFIER NOT_EQUALS FALSE\n     relational_expression   : IDENTIFIER GREATER_THAN IDENTIFIER\n                                | IDENTIFIER GREATER_THAN INTEGER\n                                | IDENTIFIER GREATER_THAN FLOAT\n                                | IDENTIFIER LESS_THAN IDENTIFIER\n                                | IDENTIFIER LESS_THAN INTEGER\n                                | IDENTIFIER LESS_THAN FLOAT\n                                | IDENTIFIER LESS_THAN_OR_EQUAL IDENTIFIER\n                                | IDENTIFIER LESS_THAN_OR_EQUAL INTEGER\n                                | IDENTIFIER LESS_THAN_OR_EQUAL FLOAT\n                                | IDENTIFIER GREATER_THAN_OR_EQUAL IDENTIFIER\n                                | IDENTIFIER GREATER_THAN_OR_EQUAL INTEGER\n                                | IDENTIFIER GREATER_THAN_OR_EQUAL FLOAT\n                                | INTEGER GREATER_THAN IDENTIFIER\n                                | INTEGER GREATER_THAN INTEGER\n                                | INTEGER GREATER_THAN FLOAT\n                                | INTEGER LESS_THAN IDENTIFIER\n                                | INTEGER LESS_THAN INTEGER\n                                | INTEGER LESS_THAN FLOAT\n                                | INTEGER LESS_THAN_OR_EQUAL IDENTIFIER\n                                | INTEGER LESS_THAN_OR_EQUAL INTEGER\n                                | INTEGER LESS_THAN_OR_EQUAL FLOAT\n                                | INTEGER GREATER_THAN_OR_EQUAL IDENTIFIER\n                                | INTEGER GREATER_THAN_OR_EQUAL INTEGER\n                                | INTEGER GREATER_THAN_OR_EQUAL FLOAT\n                                | FLOAT GREATER_THAN IDENTIFIER\n                                | FLOAT GREATER_THAN INTEGER\n                                | FLOAT GREATER_THAN FLOAT\n                                | FLOAT LESS_THAN IDENTIFIER\n                                | FLOAT LESS_THAN INTEGER\n                                | FLOAT LESS_THAN FLOAT\n                                | FLOAT LESS_THAN_OR_EQUAL IDENTIFIER\n                                | FLOAT LESS_THAN_OR_EQUAL INTEGER\n                                | FLOAT LESS_THAN_OR_EQUAL FLOAT\n                                | FLOAT GREATER_THAN_OR_EQUAL IDENTIFIER\n                                | FLOAT GREATER_THAN_OR_EQUAL INTEGER\n                                | FLOAT GREATER_THAN_OR_EQUAL FLOAT\n    unary_expression   : MINUS number\n                          | PLUS number\n                          | function_call\n                          | IDENTIFIER\n                          | LPAREN expression RPAREN\n    \n    function : type_keyword IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE\n    function : VOID IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE\n    function_call : IDENTIFIER LPAREN argument_list RPAREN \n    argument_list : argument\n                  | argument COMMA argument_list\n    \n    argument : type_keyword IDENTIFIER\n             | IDENTIFIER\n    number : INTEGER\n              | FLOAT\n    '
    
_lr_action_items = {'VOID':([0,],[5,]),'TYPE_INT':([0,2,14,15,26,28,29,31,32,34,35,36,37,38,40,41,42,70,87,88,89,105,116,117,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[6,10,21,21,21,21,21,21,21,21,-6,-7,-8,-9,-11,-12,-13,-10,21,21,21,21,-139,-140,-22,-23,-24,-25,-26,21,21,21,-17,-20,-21,21,21,-18,21,21,-19,]),'TYPE_BOOL':([0,14,15,26,28,29,31,32,34,35,36,37,38,40,41,42,70,87,88,89,105,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[7,7,7,7,7,7,7,7,7,-6,-7,-8,-9,-11,-12,-13,-10,7,7,7,7,-22,-23,-24,-25,-26,7,7,7,-17,-20,-21,7,7,-18,7,7,-19,]),'TYPE_FLOAT':([0,14,15,26,28,29,31,32,34,35,36,37,38,40,41,42,70,87,88,89,105,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[8,8,8,8,8,8,8,8,8,-6,-7,-8,-9,-11,-12,-13,-10,8,8,8,8,-22,-23,-24,-25,-26,8,8,8,-17,-20,-21,8,8,-18,8,8,-19,]),'$end':([1,3,9,68,],[0,-2,-1,-3,]),'IDENTIFIER':([4,5,6,7,8,14,15,17,21,26,28,29,31,32,34,35,36,37,38,40,41,42,56,64,70,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,167,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[11,12,-14,-15,-16,18,18,24,-14,18,57,57,57,57,57,-6,-7,-8,-9,-11,-12,-13,90,112,-10,124,126,128,131,134,137,140,143,146,149,153,156,159,162,57,57,57,168,175,177,179,182,185,188,191,194,197,200,205,210,213,18,168,-22,-23,-24,-25,-26,57,57,57,-17,-20,-21,57,57,-18,57,57,-19,]),'MAIN':([6,10,],[13,13,]),'LPAREN':([11,12,13,28,29,31,32,34,35,36,37,38,40,41,42,43,46,53,54,57,70,87,88,89,168,232,233,234,235,236,237,238,239,242,243,244,247,248,249,250,253,255,259,261,],[14,15,16,32,32,32,32,32,-6,-7,-8,-9,-11,-12,-13,71,82,87,88,105,-10,32,32,32,105,-22,-23,-24,-25,-26,32,32,242,32,-17,-20,250,-21,32,32,-18,32,32,-19,]),'RPAREN':([16,18,19,20,22,24,30,47,48,49,50,51,52,57,58,59,60,61,67,106,107,108,109,110,111,112,113,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,225,226,227,228,229,230,231,245,252,],[23,-145,25,-142,27,-144,-143,-27,-28,-29,-30,-31,-32,-137,-136,-62,-63,-64,118,-134,-146,-147,-135,-83,-84,-85,-86,-87,-138,217,218,219,220,-46,-47,-49,-48,-111,-110,-112,-114,-113,-115,-117,-116,-118,-120,-119,-121,-124,-122,-123,-127,-125,-126,-130,-128,-129,-133,-131,-132,221,-69,-68,-70,-78,-77,-79,-73,-71,-72,-82,-80,-81,222,223,-56,-57,-58,-59,-60,-61,-33,-34,-35,-39,-36,-37,-38,-40,-41,-42,-43,-44,-45,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-65,-66,-67,-74,-75,-76,231,-50,-51,-52,-53,-54,-55,-141,248,254,]),'COMMA':([18,20,24,],[-145,26,-144,]),'LBRACE':([23,25,27,55,222,223,246,254,258,],[28,29,31,89,237,238,249,255,259,]),'RETURN':([28,29,31,34,35,36,37,38,40,41,42,70,89,232,233,234,235,236,237,238,243,244,248,249,253,255,259,261,],[43,43,43,43,-6,-7,-8,-9,-11,-12,-13,-10,43,-22,-23,-24,-25,-26,43,43,-17,-20,-21,43,-18,43,43,-19,]),'PRINT':([28,29,31,34,35,36,37,38,40,41,42,70,89,232,233,234,235,236,237,238,243,244,248,249,253,255,259,261,],[46,46,46,46,-6,-7,-8,-9,-11,-12,-13,-10,46,-22,-23,-24,-25,-26,46,46,-17,-20,-21,46,-18,46,46,-19,]),'IF':([28,29,31,34,35,36,37,38,40,41,42,70,89,232,233,234,235,236,237,238,243,244,248,249,253,255,259,261,],[53,53,53,53,-6,-7,-8,-9,-11,-12,-13,-10,53,-22,-23,-24,-25,-26,53,53,-17,-20,-21,53,-18,53,53,-19,]),'WHILE':([28,29,31,34,35,36,37,38,40,41,42,70,89,224,232,233,234,235,236,237,238,243,244,248,249,253,255,259,261,],[54,54,54,54,-6,-7,-8,-9,-11,-12,-13,-10,54,239,-22,-23,-24,-25,-26,54,54,-17,-20,-21,54,-18,54,54,-19,]),'DO':([28,29,31,34,35,36,37,38,40,41,42,70,89,232,233,234,235,236,237,238,243,244,248,249,253,255,259,261,],[55,55,55,55,-6,-7,-8,-9,-11,-12,-13,-10,55,-22,-23,-24,-25,-26,55,55,-17,-20,-21,55,-18,55,55,-19,]),'MINUS':([28,29,31,32,34,35,36,37,38,40,41,42,57,70,87,88,89,168,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[62,62,62,62,62,-6,-7,-8,-9,-11,-12,-13,94,-10,62,62,62,94,-22,-23,-24,-25,-26,62,62,62,-17,-20,-21,62,62,-18,62,62,-19,]),'PLUS':([28,29,31,32,34,35,36,37,38,40,41,42,44,57,70,87,88,89,168,169,225,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[63,63,63,63,63,-6,-7,-8,-9,-11,-12,-13,72,92,-10,63,63,63,92,72,72,-22,-23,-24,-25,-26,63,63,63,-17,-20,-21,63,63,-18,63,63,-19,]),'INTEGER':([28,29,31,32,34,35,36,37,38,40,41,42,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,167,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[44,44,44,44,44,-6,-7,-8,-9,-11,-12,-13,107,107,115,-10,119,123,125,127,130,133,136,141,144,147,150,115,115,115,115,44,44,44,169,176,178,180,183,186,189,192,195,198,201,206,115,115,225,-22,-23,-24,-25,-26,44,44,44,-17,-20,-21,44,44,-18,44,44,-19,]),'FLOAT':([28,29,31,32,34,35,36,37,38,40,41,42,62,63,64,70,71,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,91,94,95,96,97,98,99,100,101,102,103,104,167,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[45,45,45,45,45,-6,-7,-8,-9,-11,-12,-13,108,108,45,-10,120,129,132,135,138,139,142,145,148,45,45,45,45,45,45,45,170,181,184,187,190,193,196,199,202,207,45,45,226,-22,-23,-24,-25,-26,45,45,45,-17,-20,-21,45,45,-18,45,45,-19,]),'LOGICAL_NOT':([28,29,31,32,34,35,36,37,38,40,41,42,70,87,88,89,232,233,234,235,236,237,238,242,243,244,248,249,250,253,255,259,261,],[64,64,64,64,64,-6,-7,-8,-9,-11,-12,-13,-10,64,64,64,-22,-23,-24,-25,-26,64,64,64,-17,-20,-21,64,64,-18,64,64,-19,]),'RBRACE':([33,34,35,36,37,38,40,41,42,65,66,69,70,166,232,233,234,235,236,240,241,243,244,248,251,253,256,260,261,],[68,-4,-6,-7,-8,-9,-11,-12,-13,116,117,-5,-10,224,-22,-23,-24,-25,-26,243,244,-17,-20,-21,253,-18,257,261,-19,]),'SEMICOLON':([39,47,48,49,50,51,52,57,58,59,60,61,106,107,108,109,110,111,112,113,114,118,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,225,226,227,228,229,230,231,],[70,-27,-28,-29,-30,-31,-32,-137,-136,-62,-63,-64,-134,-146,-147,-135,-83,-84,-85,-86,-87,-138,-46,-47,-49,-48,-111,-110,-112,-114,-113,-115,-117,-116,-118,-120,-119,-121,-124,-122,-123,-127,-125,-126,-130,-128,-129,-133,-131,-132,-69,-68,-70,-78,-77,-79,-73,-71,-72,-82,-80,-81,-56,-57,-58,-59,-60,-61,-33,-34,-35,-39,-36,-37,-38,-40,-41,-42,-43,-44,-45,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-65,-66,-67,-74,-75,-76,232,233,234,235,236,-50,-51,-52,-53,-54,-55,-141,]),'MODULUS':([44,57,168,169,225,],[73,93,93,73,73,]),'GREATER_THAN':([44,45,57,112,115,153,156,159,162,210,213,],[74,78,97,97,74,97,97,97,97,97,97,]),'LESS_THAN':([44,45,57,112,115,153,156,159,162,210,213,],[75,79,98,98,75,98,98,98,98,98,98,]),'LESS_THAN_OR_EQUAL':([44,45,57,112,115,153,156,159,162,210,213,],[76,80,99,99,76,99,99,99,99,99,99,]),'GREATER_THAN_OR_EQUAL':([44,45,57,112,115,153,156,159,162,210,213,],[77,81,100,100,77,100,100,100,100,100,100,]),'LOGICAL_OR':([51,52,57,112,113,114,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,],[83,85,103,103,85,83,-111,-110,-112,-114,-113,-115,-117,-116,-118,-120,-119,-121,-124,-122,-123,-127,-125,-126,-130,-128,-129,-133,-131,-132,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,]),'LOGICAL_AND':([51,52,57,112,113,114,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,],[84,86,104,104,86,84,-111,-110,-112,-114,-113,-115,-117,-116,-118,-120,-119,-121,-124,-122,-123,-127,-125,-126,-130,-128,-129,-133,-131,-132,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,]),'ASSIGN':([57,90,],[91,167,]),'MULTIPLY':([57,168,],[95,95,]),'DIVIDE':([57,168,],[96,96,]),'EQUALS':([57,112,153,156,159,162,210,213,],[101,101,101,101,101,101,101,101,]),'NOT_EQUALS':([57,112,153,156,159,162,210,213,],[102,102,102,102,102,102,102,102,]),'TRUE':([71,91,101,102,167,],[121,171,203,208,227,]),'FALSE':([71,91,101,102,167,],[122,172,204,209,228,]),'STRING':([82,],[151,]),'ELSE':([243,257,],[246,258,]),'ELIF':([243,],[247,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([0,],[2,]),'main_function':([0,2,],[3,9,]),'type_keyword':([0,14,15,26,28,29,31,32,34,87,88,89,105,237,238,242,249,250,255,259,],[4,17,17,17,56,56,56,56,56,56,56,56,17,56,56,56,56,56,56,56,]),'argument_list':([14,15,26,105,],[19,22,30,216,]),'argument':([14,15,26,105,],[20,20,20,20,]),'statement_list':([28,29,31,34,],[33,65,66,69,]),'statement':([28,29,31,34,89,237,238,249,255,259,],[34,34,34,34,166,240,241,251,256,260,]),'expression_statement':([28,29,31,34,89,237,238,249,255,259,],[35,35,35,35,35,35,35,35,35,35,]),'control_statement':([28,29,31,34,89,237,238,249,255,259,],[36,36,36,36,36,36,36,36,36,36,]),'return_statement':([28,29,31,34,89,237,238,249,255,259,],[37,37,37,37,37,37,37,37,37,37,]),'print_statement':([28,29,31,34,89,237,238,249,255,259,],[38,38,38,38,38,38,38,38,38,38,]),'expression':([28,29,31,32,34,87,88,89,237,238,242,249,250,255,259,],[39,39,39,67,39,164,165,39,39,39,245,39,252,39,39,]),'if_statement':([28,29,31,34,89,237,238,249,255,259,],[40,40,40,40,40,40,40,40,40,40,]),'while_statement':([28,29,31,34,89,237,238,249,255,259,],[41,41,41,41,41,41,41,41,41,41,]),'do_while_statement':([28,29,31,34,89,237,238,249,255,259,],[42,42,42,42,42,42,42,42,42,42,]),'assignment_expression':([28,29,31,32,34,87,88,89,237,238,242,249,250,255,259,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'logical_expression':([28,29,31,32,34,87,88,89,237,238,242,249,250,255,259,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'unary_expression':([28,29,31,32,34,87,88,89,237,238,242,249,250,255,259,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'arithmetic_expression':([28,29,31,32,34,87,88,89,91,167,237,238,242,249,250,255,259,],[50,50,50,50,50,50,50,50,173,229,50,50,50,50,50,50,50,]),'relational_expression':([28,29,31,32,34,64,83,84,85,86,87,88,89,103,104,237,238,242,249,250,255,259,],[51,51,51,51,51,114,152,155,160,163,51,51,51,211,214,51,51,51,51,51,51,51,]),'equality_expression':([28,29,31,32,34,64,83,84,85,86,87,88,89,103,104,237,238,242,249,250,255,259,],[52,52,52,52,52,113,154,157,158,161,52,52,52,212,215,52,52,52,52,52,52,52,]),'function_call':([28,29,31,32,34,87,88,89,91,167,237,238,242,249,250,255,259,],[58,58,58,58,58,58,58,58,174,230,58,58,58,58,58,58,58,]),'logical_or_expression':([28,29,31,32,34,64,87,88,89,237,238,242,249,250,255,259,],[59,59,59,59,59,111,59,59,59,59,59,59,59,59,59,59,]),'logical_and_expression':([28,29,31,32,34,64,87,88,89,237,238,242,249,250,255,259,],[60,60,60,60,60,110,60,60,60,60,60,60,60,60,60,60,]),'logical_not_expression':([28,29,31,32,34,87,88,89,237,238,242,249,250,255,259,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'number':([62,63,],[106,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function main_function','program',2,'p_program','parser.py',33),
  ('program -> main_function','program',1,'p_program','parser.py',34),
  ('main_function -> TYPE_INT MAIN LPAREN RPAREN LBRACE statement_list RBRACE','main_function',7,'p_main_function','parser.py',44),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',51),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser.py',52),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',62),
  ('statement -> control_statement','statement',1,'p_statement','parser.py',63),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',64),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',65),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',72),
  ('control_statement -> if_statement','control_statement',1,'p_control_statement','parser.py',79),
  ('control_statement -> while_statement','control_statement',1,'p_control_statement','parser.py',80),
  ('control_statement -> do_while_statement','control_statement',1,'p_control_statement','parser.py',81),
  ('type_keyword -> TYPE_INT','type_keyword',1,'p_type_keyword','parser.py',98),
  ('type_keyword -> TYPE_BOOL','type_keyword',1,'p_type_keyword','parser.py',99),
  ('type_keyword -> TYPE_FLOAT','type_keyword',1,'p_type_keyword','parser.py',100),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE','if_statement',7,'p_if_statement','parser.py',107),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','if_statement',11,'p_if_statement','parser.py',108),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELIF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','if_statement',18,'p_if_statement','parser.py',109),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE','while_statement',7,'p_while_statement','parser.py',121),
  ('do_while_statement -> DO LBRACE statement RBRACE WHILE LPAREN expression RPAREN','do_while_statement',8,'p_do_while_statement','parser.py',127),
  ('return_statement -> RETURN LPAREN INTEGER RPAREN SEMICOLON','return_statement',5,'p_return_statement','parser.py',132),
  ('return_statement -> RETURN LPAREN FLOAT RPAREN SEMICOLON','return_statement',5,'p_return_statement','parser.py',133),
  ('return_statement -> RETURN LPAREN TRUE RPAREN SEMICOLON','return_statement',5,'p_return_statement','parser.py',134),
  ('return_statement -> RETURN LPAREN FALSE RPAREN SEMICOLON','return_statement',5,'p_return_statement','parser.py',135),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser.py',142),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',149),
  ('expression -> logical_expression','expression',1,'p_expression','parser.py',150),
  ('expression -> unary_expression','expression',1,'p_expression','parser.py',151),
  ('expression -> arithmetic_expression','expression',1,'p_expression','parser.py',152),
  ('expression -> relational_expression','expression',1,'p_expression','parser.py',153),
  ('expression -> equality_expression','expression',1,'p_expression','parser.py',154),
  ('arithmetic_expression -> IDENTIFIER PLUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',161),
  ('arithmetic_expression -> IDENTIFIER PLUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',162),
  ('arithmetic_expression -> IDENTIFIER MODULUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',163),
  ('arithmetic_expression -> IDENTIFIER MINUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',164),
  ('arithmetic_expression -> IDENTIFIER MINUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',165),
  ('arithmetic_expression -> IDENTIFIER MINUS FLOAT','arithmetic_expression',3,'p_arithmetic_expression','parser.py',166),
  ('arithmetic_expression -> IDENTIFIER MODULUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',167),
  ('arithmetic_expression -> IDENTIFIER MULTIPLY IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',168),
  ('arithmetic_expression -> IDENTIFIER MULTIPLY INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',169),
  ('arithmetic_expression -> IDENTIFIER MULTIPLY FLOAT','arithmetic_expression',3,'p_arithmetic_expression','parser.py',170),
  ('arithmetic_expression -> IDENTIFIER DIVIDE IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',171),
  ('arithmetic_expression -> IDENTIFIER DIVIDE INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',172),
  ('arithmetic_expression -> IDENTIFIER DIVIDE FLOAT','arithmetic_expression',3,'p_arithmetic_expression','parser.py',173),
  ('arithmetic_expression -> INTEGER PLUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',174),
  ('arithmetic_expression -> INTEGER PLUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',175),
  ('arithmetic_expression -> INTEGER MODULUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',176),
  ('arithmetic_expression -> INTEGER MODULUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','parser.py',177),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN INTEGER','assignment_expression',4,'p_assignment_expression','parser.py',184),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN FLOAT','assignment_expression',4,'p_assignment_expression','parser.py',185),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN TRUE','assignment_expression',4,'p_assignment_expression','parser.py',186),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN FALSE','assignment_expression',4,'p_assignment_expression','parser.py',187),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN arithmetic_expression','assignment_expression',4,'p_assignment_expression','parser.py',188),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN function_call','assignment_expression',4,'p_assignment_expression','parser.py',189),
  ('assignment_expression -> IDENTIFIER ASSIGN INTEGER','assignment_expression',3,'p_assignment_expression','parser.py',190),
  ('assignment_expression -> IDENTIFIER ASSIGN FLOAT','assignment_expression',3,'p_assignment_expression','parser.py',191),
  ('assignment_expression -> IDENTIFIER ASSIGN TRUE','assignment_expression',3,'p_assignment_expression','parser.py',192),
  ('assignment_expression -> IDENTIFIER ASSIGN FALSE','assignment_expression',3,'p_assignment_expression','parser.py',193),
  ('assignment_expression -> IDENTIFIER ASSIGN arithmetic_expression','assignment_expression',3,'p_assignment_expression','parser.py',194),
  ('assignment_expression -> IDENTIFIER ASSIGN function_call','assignment_expression',3,'p_assignment_expression','parser.py',195),
  ('logical_expression -> logical_or_expression','logical_expression',1,'p_logical_expression','parser.py',205),
  ('logical_expression -> logical_and_expression','logical_expression',1,'p_logical_expression','parser.py',206),
  ('logical_expression -> logical_not_expression','logical_expression',1,'p_logical_expression','parser.py',207),
  ('logical_or_expression -> IDENTIFIER LOGICAL_OR IDENTIFIER','logical_or_expression',3,'p_logical_or_expression','parser.py',214),
  ('logical_or_expression -> IDENTIFIER LOGICAL_OR relational_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',215),
  ('logical_or_expression -> IDENTIFIER LOGICAL_OR equality_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',216),
  ('logical_or_expression -> relational_expression LOGICAL_OR IDENTIFIER','logical_or_expression',3,'p_logical_or_expression','parser.py',217),
  ('logical_or_expression -> relational_expression LOGICAL_OR relational_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',218),
  ('logical_or_expression -> relational_expression LOGICAL_OR equality_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',219),
  ('logical_or_expression -> equality_expression LOGICAL_OR IDENTIFIER','logical_or_expression',3,'p_logical_or_expression','parser.py',220),
  ('logical_or_expression -> equality_expression LOGICAL_OR relational_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',221),
  ('logical_or_expression -> equality_expression LOGICAL_OR equality_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',222),
  ('logical_and_expression -> IDENTIFIER LOGICAL_AND IDENTIFIER','logical_and_expression',3,'p_logical_and_expression','parser.py',229),
  ('logical_and_expression -> IDENTIFIER LOGICAL_AND relational_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',230),
  ('logical_and_expression -> IDENTIFIER LOGICAL_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',231),
  ('logical_and_expression -> relational_expression LOGICAL_AND IDENTIFIER','logical_and_expression',3,'p_logical_and_expression','parser.py',232),
  ('logical_and_expression -> relational_expression LOGICAL_AND relational_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',233),
  ('logical_and_expression -> relational_expression LOGICAL_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',234),
  ('logical_and_expression -> equality_expression LOGICAL_AND IDENTIFIER','logical_and_expression',3,'p_logical_and_expression','parser.py',235),
  ('logical_and_expression -> equality_expression LOGICAL_AND relational_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',236),
  ('logical_and_expression -> equality_expression LOGICAL_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',237),
  ('logical_not_expression -> LOGICAL_NOT logical_and_expression','logical_not_expression',2,'p_logical_not_expression','parser.py',243),
  ('logical_not_expression -> LOGICAL_NOT logical_or_expression','logical_not_expression',2,'p_logical_not_expression','parser.py',244),
  ('logical_not_expression -> LOGICAL_NOT IDENTIFIER','logical_not_expression',2,'p_logical_not_expression','parser.py',245),
  ('logical_not_expression -> LOGICAL_NOT equality_expression','logical_not_expression',2,'p_logical_not_expression','parser.py',246),
  ('logical_not_expression -> LOGICAL_NOT relational_expression','logical_not_expression',2,'p_logical_not_expression','parser.py',247),
  ('equality_expression -> IDENTIFIER EQUALS IDENTIFIER','equality_expression',3,'p_equality_expression','parser.py',253),
  ('equality_expression -> IDENTIFIER EQUALS INTEGER','equality_expression',3,'p_equality_expression','parser.py',254),
  ('equality_expression -> IDENTIFIER EQUALS FLOAT','equality_expression',3,'p_equality_expression','parser.py',255),
  ('equality_expression -> IDENTIFIER EQUALS TRUE','equality_expression',3,'p_equality_expression','parser.py',256),
  ('equality_expression -> IDENTIFIER EQUALS FALSE','equality_expression',3,'p_equality_expression','parser.py',257),
  ('equality_expression -> IDENTIFIER NOT_EQUALS IDENTIFIER','equality_expression',3,'p_equality_expression','parser.py',258),
  ('equality_expression -> IDENTIFIER NOT_EQUALS INTEGER','equality_expression',3,'p_equality_expression','parser.py',259),
  ('equality_expression -> IDENTIFIER NOT_EQUALS FLOAT','equality_expression',3,'p_equality_expression','parser.py',260),
  ('equality_expression -> IDENTIFIER NOT_EQUALS TRUE','equality_expression',3,'p_equality_expression','parser.py',261),
  ('equality_expression -> IDENTIFIER NOT_EQUALS FALSE','equality_expression',3,'p_equality_expression','parser.py',262),
  ('relational_expression -> IDENTIFIER GREATER_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',268),
  ('relational_expression -> IDENTIFIER GREATER_THAN INTEGER','relational_expression',3,'p_relational_expression','parser.py',269),
  ('relational_expression -> IDENTIFIER GREATER_THAN FLOAT','relational_expression',3,'p_relational_expression','parser.py',270),
  ('relational_expression -> IDENTIFIER LESS_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',271),
  ('relational_expression -> IDENTIFIER LESS_THAN INTEGER','relational_expression',3,'p_relational_expression','parser.py',272),
  ('relational_expression -> IDENTIFIER LESS_THAN FLOAT','relational_expression',3,'p_relational_expression','parser.py',273),
  ('relational_expression -> IDENTIFIER LESS_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',274),
  ('relational_expression -> IDENTIFIER LESS_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','parser.py',275),
  ('relational_expression -> IDENTIFIER LESS_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','parser.py',276),
  ('relational_expression -> IDENTIFIER GREATER_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',277),
  ('relational_expression -> IDENTIFIER GREATER_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','parser.py',278),
  ('relational_expression -> IDENTIFIER GREATER_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','parser.py',279),
  ('relational_expression -> INTEGER GREATER_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',280),
  ('relational_expression -> INTEGER GREATER_THAN INTEGER','relational_expression',3,'p_relational_expression','parser.py',281),
  ('relational_expression -> INTEGER GREATER_THAN FLOAT','relational_expression',3,'p_relational_expression','parser.py',282),
  ('relational_expression -> INTEGER LESS_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',283),
  ('relational_expression -> INTEGER LESS_THAN INTEGER','relational_expression',3,'p_relational_expression','parser.py',284),
  ('relational_expression -> INTEGER LESS_THAN FLOAT','relational_expression',3,'p_relational_expression','parser.py',285),
  ('relational_expression -> INTEGER LESS_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',286),
  ('relational_expression -> INTEGER LESS_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','parser.py',287),
  ('relational_expression -> INTEGER LESS_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','parser.py',288),
  ('relational_expression -> INTEGER GREATER_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',289),
  ('relational_expression -> INTEGER GREATER_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','parser.py',290),
  ('relational_expression -> INTEGER GREATER_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','parser.py',291),
  ('relational_expression -> FLOAT GREATER_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',292),
  ('relational_expression -> FLOAT GREATER_THAN INTEGER','relational_expression',3,'p_relational_expression','parser.py',293),
  ('relational_expression -> FLOAT GREATER_THAN FLOAT','relational_expression',3,'p_relational_expression','parser.py',294),
  ('relational_expression -> FLOAT LESS_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',295),
  ('relational_expression -> FLOAT LESS_THAN INTEGER','relational_expression',3,'p_relational_expression','parser.py',296),
  ('relational_expression -> FLOAT LESS_THAN FLOAT','relational_expression',3,'p_relational_expression','parser.py',297),
  ('relational_expression -> FLOAT LESS_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',298),
  ('relational_expression -> FLOAT LESS_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','parser.py',299),
  ('relational_expression -> FLOAT LESS_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','parser.py',300),
  ('relational_expression -> FLOAT GREATER_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','parser.py',301),
  ('relational_expression -> FLOAT GREATER_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','parser.py',302),
  ('relational_expression -> FLOAT GREATER_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','parser.py',303),
  ('unary_expression -> MINUS number','unary_expression',2,'p_unary_expression','parser.py',309),
  ('unary_expression -> PLUS number','unary_expression',2,'p_unary_expression','parser.py',310),
  ('unary_expression -> function_call','unary_expression',1,'p_unary_expression','parser.py',311),
  ('unary_expression -> IDENTIFIER','unary_expression',1,'p_unary_expression','parser.py',312),
  ('unary_expression -> LPAREN expression RPAREN','unary_expression',3,'p_unary_expression','parser.py',313),
  ('function -> type_keyword IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE','function',8,'p_function','parser.py',325),
  ('function -> VOID IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE','function',8,'p_function','parser.py',326),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',332),
  ('argument_list -> argument','argument_list',1,'p_argument_list','parser.py',338),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','parser.py',339),
  ('argument -> type_keyword IDENTIFIER','argument',2,'p_argument','parser.py',349),
  ('argument -> IDENTIFIER','argument',1,'p_argument','parser.py',350),
  ('number -> INTEGER','number',1,'p_number','parser.py',359),
  ('number -> FLOAT','number',1,'p_number','parser.py',360),
]
