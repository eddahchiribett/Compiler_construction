
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICAL_ORleftLOGICAL_ANDleftEQUALSNOT_EQUALSleftLESS_THANLESS_THAN_OR_EQUALGREATER_THANGREATER_THAN_OR_EQUALleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSrightLOGICAL_NOTASSIGN COMMA DIVIDE DO ELIF ELSE EQUALS FALSE FLOAT GREATER_THAN GREATER_THAN_OR_EQUAL IDENTIFIER IF INTEGER LBRACE LESS_THAN LESS_THAN_OR_EQUAL LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MAIN MINUS MODULUS MULTIPLY NOT_EQUALS PLUS PRINT RBRACE RETURN RPAREN SEMICOLON STRING TRUE TYPE_BOOL TYPE_FLOAT TYPE_INT VOID WHILE\n    program : function main_function\n            | main_function\n    \n    main_function : TYPE_INT MAIN LPAREN RPAREN LBRACE statement_list RBRACE\n    \n    statement_list : statement\n                   | statement statement_list\n    \n    statement : expression_statement\n              | control_statement\n              | return_statement\n              | print_statement\n    \n    expression_statement : expression SEMICOLON\n    \n    control_statement : if_statement\n                      | while_statement\n                      | do_while_statement\n    \n    type_keyword : TYPE_INT\n                 | TYPE_BOOL\n                 | TYPE_FLOAT\n    \n    if_statement : IF LPAREN expression RPAREN LBRACE statement RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statement RBRACE ELIF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE\n    \n    while_statement : WHILE LPAREN expression RPAREN LBRACE statement RBRACE\n    \n    do_while_statement : DO LBRACE statement RBRACE WHILE LPAREN expression RPAREN SEMICOLON\n    return_statement : RETURN LPAREN INTEGER RPAREN SEMICOLON\n                        | RETURN LPAREN FLOAT RPAREN SEMICOLON\n                        | RETURN LPAREN TRUE RPAREN SEMICOLON\n                        | RETURN LPAREN FALSE RPAREN SEMICOLON\n    \n    print_statement : PRINT LPAREN STRING RPAREN SEMICOLON\n    \n    expression  : assignment_expression\n                | logical_expression\n                | unary_expression\n                | arithmetic_expression\n                | relational_expression\n                | equality_expression\n                | TRUE\n                | FALSE\n    \n    arithmetic_expression   : IDENTIFIER PLUS IDENTIFIER\n                            | IDENTIFIER PLUS INTEGER\n                            | IDENTIFIER MODULUS IDENTIFIER\n                            | IDENTIFIER MINUS IDENTIFIER\n                            | IDENTIFIER MINUS INTEGER\n                            | IDENTIFIER MINUS FLOAT\n                            | IDENTIFIER MODULUS INTEGER\n                            | IDENTIFIER MULTIPLY IDENTIFIER\n                            | IDENTIFIER MULTIPLY INTEGER\n                            | IDENTIFIER MULTIPLY FLOAT\n                            | IDENTIFIER DIVIDE IDENTIFIER\n                            | IDENTIFIER DIVIDE INTEGER\n                            | IDENTIFIER DIVIDE FLOAT\n                            | INTEGER PLUS INTEGER\n                            | INTEGER MULTIPLY INTEGER\n                            | INTEGER MINUS INTEGER\n                            | INTEGER PLUS IDENTIFIER\n                            | INTEGER DIVIDE INTEGER\n                            | INTEGER MODULUS IDENTIFIER\n                            | INTEGER MODULUS INTEGER\n                            | FLOAT PLUS FLOAT\n                            | FLOAT MINUS FLOAT\n                            | FLOAT MULTIPLY FLOAT\n                            | FLOAT DIVIDE FLOAT\n    \n    assignment_expression : type_keyword IDENTIFIER ASSIGN INTEGER\n                          | type_keyword IDENTIFIER ASSIGN FLOAT\n                          | type_keyword IDENTIFIER ASSIGN TRUE\n                          | type_keyword IDENTIFIER ASSIGN FALSE\n                          | type_keyword IDENTIFIER ASSIGN arithmetic_expression\n                          | type_keyword IDENTIFIER ASSIGN function_call\n                          | IDENTIFIER ASSIGN INTEGER\n                          | IDENTIFIER ASSIGN FLOAT\n                          | IDENTIFIER ASSIGN TRUE\n                          | IDENTIFIER ASSIGN FALSE\n                          | IDENTIFIER ASSIGN arithmetic_expression\n                          | IDENTIFIER ASSIGN function_call\n    \n    logical_expression : logical_or_expression\n                       | logical_and_expression\n                       | logical_not_expression\n    \n    logical_or_expression   : IDENTIFIER LOGICAL_OR IDENTIFIER\n                            | IDENTIFIER LOGICAL_OR relational_expression\n                            | IDENTIFIER LOGICAL_OR equality_expression\n                            | relational_expression LOGICAL_OR IDENTIFIER\n                            | relational_expression LOGICAL_OR relational_expression\n                            | relational_expression LOGICAL_OR equality_expression\n                            | equality_expression LOGICAL_OR IDENTIFIER\n                            | equality_expression LOGICAL_OR relational_expression\n                            | equality_expression LOGICAL_OR equality_expression\n    \n    logical_and_expression : IDENTIFIER LOGICAL_AND IDENTIFIER\n                           | IDENTIFIER LOGICAL_AND relational_expression\n                           | IDENTIFIER LOGICAL_AND equality_expression\n                           | relational_expression LOGICAL_AND IDENTIFIER\n                           | relational_expression LOGICAL_AND relational_expression\n                           | relational_expression LOGICAL_AND equality_expression\n                           | equality_expression LOGICAL_AND IDENTIFIER\n                           | equality_expression LOGICAL_AND relational_expression\n                           | equality_expression LOGICAL_AND equality_expression\n    logical_not_expression   : LOGICAL_NOT logical_and_expression\n                                | LOGICAL_NOT logical_or_expression\n                                | LOGICAL_NOT IDENTIFIER\n                                | LOGICAL_NOT equality_expression\n                                | LOGICAL_NOT relational_expression\n    equality_expression : IDENTIFIER EQUALS IDENTIFIER\n                           | IDENTIFIER EQUALS INTEGER\n                           | IDENTIFIER EQUALS FLOAT\n                           | IDENTIFIER EQUALS TRUE\n                           | IDENTIFIER EQUALS FALSE\n                           | IDENTIFIER NOT_EQUALS IDENTIFIER\n                           | IDENTIFIER NOT_EQUALS INTEGER\n                           | IDENTIFIER NOT_EQUALS FLOAT\n                           | IDENTIFIER NOT_EQUALS TRUE\n                           | IDENTIFIER NOT_EQUALS FALSE\n     relational_expression   : IDENTIFIER GREATER_THAN IDENTIFIER\n                                | IDENTIFIER GREATER_THAN INTEGER\n                                | IDENTIFIER GREATER_THAN FLOAT\n                                | IDENTIFIER LESS_THAN IDENTIFIER\n                                | IDENTIFIER LESS_THAN INTEGER\n                                | IDENTIFIER LESS_THAN FLOAT\n                                | IDENTIFIER LESS_THAN_OR_EQUAL IDENTIFIER\n                                | IDENTIFIER LESS_THAN_OR_EQUAL INTEGER\n                                | IDENTIFIER LESS_THAN_OR_EQUAL FLOAT\n                                | IDENTIFIER GREATER_THAN_OR_EQUAL IDENTIFIER\n                                | IDENTIFIER GREATER_THAN_OR_EQUAL INTEGER\n                                | IDENTIFIER GREATER_THAN_OR_EQUAL FLOAT\n                                | INTEGER GREATER_THAN IDENTIFIER\n                                | INTEGER GREATER_THAN INTEGER\n                                | INTEGER GREATER_THAN FLOAT\n                                | INTEGER LESS_THAN IDENTIFIER\n                                | INTEGER LESS_THAN INTEGER\n                                | INTEGER LESS_THAN FLOAT\n                                | INTEGER LESS_THAN_OR_EQUAL IDENTIFIER\n                                | INTEGER LESS_THAN_OR_EQUAL INTEGER\n                                | INTEGER LESS_THAN_OR_EQUAL FLOAT\n                                | INTEGER GREATER_THAN_OR_EQUAL IDENTIFIER\n                                | INTEGER GREATER_THAN_OR_EQUAL INTEGER\n                                | INTEGER GREATER_THAN_OR_EQUAL FLOAT\n                                | FLOAT GREATER_THAN IDENTIFIER\n                                | FLOAT GREATER_THAN INTEGER\n                                | FLOAT GREATER_THAN FLOAT\n                                | FLOAT LESS_THAN IDENTIFIER\n                                | FLOAT LESS_THAN INTEGER\n                                | FLOAT LESS_THAN FLOAT\n                                | FLOAT LESS_THAN_OR_EQUAL IDENTIFIER\n                                | FLOAT LESS_THAN_OR_EQUAL INTEGER\n                                | FLOAT LESS_THAN_OR_EQUAL FLOAT\n                                | FLOAT GREATER_THAN_OR_EQUAL IDENTIFIER\n                                | FLOAT GREATER_THAN_OR_EQUAL INTEGER\n                                | FLOAT GREATER_THAN_OR_EQUAL FLOAT\n    unary_expression   : MINUS number\n                          | PLUS number\n                          | function_call\n                          | IDENTIFIER\n                          | LPAREN expression RPAREN\n    \n    function : type_keyword IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE\n             | VOID IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE\n    function_call : IDENTIFIER LPAREN argument_list RPAREN\n    \n    argument_list : argument\n                  | argument COMMA argument_list\n    \n    argument : type_keyword IDENTIFIER\n             | IDENTIFIER\n    number : INTEGER\n              | FLOAT\n    '
    
_lr_action_items = {'VOID':([0,],[5,]),'TYPE_INT':([0,2,14,15,26,28,29,31,32,34,35,36,37,38,40,41,42,72,96,97,98,114,126,127,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[6,10,21,21,21,21,21,21,21,21,-6,-7,-8,-9,-11,-12,-13,-10,21,21,21,21,-148,-149,-22,-23,-24,-25,-26,21,21,21,-17,-20,21,21,-21,-18,21,21,-19,]),'TYPE_BOOL':([0,14,15,26,28,29,31,32,34,35,36,37,38,40,41,42,72,96,97,98,114,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[7,7,7,7,7,7,7,7,7,-6,-7,-8,-9,-11,-12,-13,-10,7,7,7,7,-22,-23,-24,-25,-26,7,7,7,-17,-20,7,7,-21,-18,7,7,-19,]),'TYPE_FLOAT':([0,14,15,26,28,29,31,32,34,35,36,37,38,40,41,42,72,96,97,98,114,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[8,8,8,8,8,8,8,8,8,-6,-7,-8,-9,-11,-12,-13,-10,8,8,8,8,-22,-23,-24,-25,-26,8,8,8,-17,-20,8,8,-21,-18,8,8,-19,]),'$end':([1,3,9,70,],[0,-2,-1,-3,]),'IDENTIFIER':([4,5,6,7,8,14,15,17,21,26,28,29,31,32,34,35,36,37,38,40,41,42,58,66,72,74,78,79,80,81,82,87,88,89,90,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,184,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[11,12,-14,-15,-16,18,18,24,-14,18,59,59,59,59,59,-6,-7,-8,-9,-11,-12,-13,99,121,-10,134,139,141,144,147,150,157,160,163,166,170,173,176,179,59,59,59,185,192,194,196,199,202,205,208,211,214,217,222,227,230,18,185,-22,-23,-24,-25,-26,59,59,59,-17,-20,59,59,-21,-18,59,59,-19,]),'MAIN':([6,10,],[13,13,]),'LPAREN':([11,12,13,28,29,31,32,34,35,36,37,38,40,41,42,43,48,55,56,59,72,96,97,98,185,249,250,251,252,253,254,255,256,259,260,261,264,266,267,268,271,273,277,279,],[14,15,16,32,32,32,32,32,-6,-7,-8,-9,-11,-12,-13,73,91,96,97,114,-10,32,32,32,114,-22,-23,-24,-25,-26,32,32,259,32,-17,-20,267,32,32,-21,-18,32,32,-19,]),'RPAREN':([16,18,19,20,22,24,30,46,47,49,50,51,52,53,54,59,60,61,62,63,69,115,116,117,118,119,120,121,122,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,242,243,244,245,246,247,248,262,270,],[23,-154,25,-151,27,-153,-152,-33,-34,-27,-28,-29,-30,-31,-32,-146,-145,-71,-72,-73,128,-143,-155,-156,-144,-92,-93,-94,-95,-96,-147,234,235,236,237,-48,-51,-49,-50,-52,-54,-53,-120,-119,-121,-123,-122,-124,-126,-125,-127,-129,-128,-130,-55,-56,-57,-58,-133,-131,-132,-136,-134,-135,-139,-137,-138,-142,-140,-141,238,-78,-77,-79,-87,-86,-88,-82,-80,-81,-91,-89,-90,239,240,-65,-66,-67,-68,-69,-70,-35,-36,-37,-41,-38,-39,-40,-42,-43,-44,-45,-46,-47,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-74,-75,-76,-83,-84,-85,248,-59,-60,-61,-62,-63,-64,-150,265,272,]),'COMMA':([18,20,24,],[-154,26,-153,]),'LBRACE':([23,25,27,57,239,240,263,272,276,],[28,29,31,98,254,255,266,273,277,]),'RETURN':([28,29,31,34,35,36,37,38,40,41,42,72,98,249,250,251,252,253,254,255,260,261,266,268,271,273,277,279,],[43,43,43,43,-6,-7,-8,-9,-11,-12,-13,-10,43,-22,-23,-24,-25,-26,43,43,-17,-20,43,-21,-18,43,43,-19,]),'PRINT':([28,29,31,34,35,36,37,38,40,41,42,72,98,249,250,251,252,253,254,255,260,261,266,268,271,273,277,279,],[48,48,48,48,-6,-7,-8,-9,-11,-12,-13,-10,48,-22,-23,-24,-25,-26,48,48,-17,-20,48,-21,-18,48,48,-19,]),'TRUE':([28,29,31,32,34,35,36,37,38,40,41,42,72,73,96,97,98,100,110,111,184,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[46,46,46,46,46,-6,-7,-8,-9,-11,-12,-13,-10,131,46,46,46,188,220,225,244,-22,-23,-24,-25,-26,46,46,46,-17,-20,46,46,-21,-18,46,46,-19,]),'FALSE':([28,29,31,32,34,35,36,37,38,40,41,42,72,73,96,97,98,100,110,111,184,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[47,47,47,47,47,-6,-7,-8,-9,-11,-12,-13,-10,132,47,47,47,189,221,226,245,-22,-23,-24,-25,-26,47,47,47,-17,-20,47,47,-21,-18,47,47,-19,]),'IF':([28,29,31,34,35,36,37,38,40,41,42,72,98,249,250,251,252,253,254,255,260,261,266,268,271,273,277,279,],[55,55,55,55,-6,-7,-8,-9,-11,-12,-13,-10,55,-22,-23,-24,-25,-26,55,55,-17,-20,55,-21,-18,55,55,-19,]),'WHILE':([28,29,31,34,35,36,37,38,40,41,42,72,98,241,249,250,251,252,253,254,255,260,261,266,268,271,273,277,279,],[56,56,56,56,-6,-7,-8,-9,-11,-12,-13,-10,56,256,-22,-23,-24,-25,-26,56,56,-17,-20,56,-21,-18,56,56,-19,]),'DO':([28,29,31,34,35,36,37,38,40,41,42,72,98,249,250,251,252,253,254,255,260,261,266,268,271,273,277,279,],[57,57,57,57,-6,-7,-8,-9,-11,-12,-13,-10,57,-22,-23,-24,-25,-26,57,57,-17,-20,57,-21,-18,57,57,-19,]),'MINUS':([28,29,31,32,34,35,36,37,38,40,41,42,44,45,59,72,96,97,98,185,186,187,242,243,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[64,64,64,64,64,-6,-7,-8,-9,-11,-12,-13,76,84,103,-10,64,64,64,103,76,84,76,84,-22,-23,-24,-25,-26,64,64,64,-17,-20,64,64,-21,-18,64,64,-19,]),'PLUS':([28,29,31,32,34,35,36,37,38,40,41,42,44,45,59,72,96,97,98,185,186,187,242,243,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[65,65,65,65,65,-6,-7,-8,-9,-11,-12,-13,74,83,101,-10,65,65,65,101,74,83,74,83,-22,-23,-24,-25,-26,65,65,65,-17,-20,65,65,-21,-18,65,65,-19,]),'INTEGER':([28,29,31,32,34,35,36,37,38,40,41,42,64,65,66,72,73,74,75,76,77,78,79,80,81,82,87,88,89,90,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,184,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[44,44,44,44,44,-6,-7,-8,-9,-11,-12,-13,116,116,124,-10,129,133,135,136,137,138,140,143,146,149,158,161,164,167,124,124,124,124,44,44,44,186,193,195,197,200,203,206,209,212,215,218,223,124,124,242,-22,-23,-24,-25,-26,44,44,44,-17,-20,44,44,-21,-18,44,44,-19,]),'FLOAT':([28,29,31,32,34,35,36,37,38,40,41,42,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,100,103,104,105,106,107,108,109,110,111,112,113,184,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[45,45,45,45,45,-6,-7,-8,-9,-11,-12,-13,117,117,125,-10,130,142,145,148,151,152,153,154,155,156,159,162,165,125,125,125,125,45,45,45,187,198,201,204,207,210,213,216,219,224,125,125,243,-22,-23,-24,-25,-26,45,45,45,-17,-20,45,45,-21,-18,45,45,-19,]),'LOGICAL_NOT':([28,29,31,32,34,35,36,37,38,40,41,42,72,96,97,98,249,250,251,252,253,254,255,259,260,261,266,267,268,271,273,277,279,],[66,66,66,66,66,-6,-7,-8,-9,-11,-12,-13,-10,66,66,66,-22,-23,-24,-25,-26,66,66,66,-17,-20,66,66,-21,-18,66,66,-19,]),'RBRACE':([33,34,35,36,37,38,40,41,42,67,68,71,72,183,249,250,251,252,253,257,258,260,261,268,269,271,274,278,279,],[70,-4,-6,-7,-8,-9,-11,-12,-13,126,127,-5,-10,241,-22,-23,-24,-25,-26,260,261,-17,-20,-21,271,-18,275,279,-19,]),'SEMICOLON':([39,46,47,49,50,51,52,53,54,59,60,61,62,63,115,116,117,118,119,120,121,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,242,243,244,245,246,247,248,265,],[72,-33,-34,-27,-28,-29,-30,-31,-32,-146,-145,-71,-72,-73,-143,-155,-156,-144,-92,-93,-94,-95,-96,-147,-48,-51,-49,-50,-52,-54,-53,-120,-119,-121,-123,-122,-124,-126,-125,-127,-129,-128,-130,-55,-56,-57,-58,-133,-131,-132,-136,-134,-135,-139,-137,-138,-142,-140,-141,-78,-77,-79,-87,-86,-88,-82,-80,-81,-91,-89,-90,-65,-66,-67,-68,-69,-70,-35,-36,-37,-41,-38,-39,-40,-42,-43,-44,-45,-46,-47,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-74,-75,-76,-83,-84,-85,249,250,251,252,253,-59,-60,-61,-62,-63,-64,-150,268,]),'MULTIPLY':([44,45,59,185,186,187,242,243,],[75,85,104,104,75,85,75,85,]),'DIVIDE':([44,45,59,185,186,187,242,243,],[77,86,105,105,77,86,77,86,]),'MODULUS':([44,59,185,186,242,],[78,102,102,78,78,]),'GREATER_THAN':([44,45,59,121,124,125,170,173,176,179,227,230,],[79,87,106,106,79,87,106,106,106,106,106,106,]),'LESS_THAN':([44,45,59,121,124,125,170,173,176,179,227,230,],[80,88,107,107,80,88,107,107,107,107,107,107,]),'LESS_THAN_OR_EQUAL':([44,45,59,121,124,125,170,173,176,179,227,230,],[81,89,108,108,81,89,108,108,108,108,108,108,]),'GREATER_THAN_OR_EQUAL':([44,45,59,121,124,125,170,173,176,179,227,230,],[82,90,109,109,82,90,109,109,109,109,109,109,]),'LOGICAL_OR':([53,54,59,121,122,123,140,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,160,161,162,163,164,165,166,167,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,],[92,94,112,112,94,92,-120,-119,-121,-123,-122,-124,-126,-125,-127,-129,-128,-130,-133,-131,-132,-136,-134,-135,-139,-137,-138,-142,-140,-141,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,]),'LOGICAL_AND':([53,54,59,121,122,123,140,141,142,143,144,145,146,147,148,149,150,151,156,157,158,159,160,161,162,163,164,165,166,167,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,],[93,95,113,113,95,93,-120,-119,-121,-123,-122,-124,-126,-125,-127,-129,-128,-130,-133,-131,-132,-136,-134,-135,-139,-137,-138,-142,-140,-141,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,]),'ASSIGN':([59,99,],[100,184,]),'EQUALS':([59,121,170,173,176,179,227,230,],[110,110,110,110,110,110,110,110,]),'NOT_EQUALS':([59,121,170,173,176,179,227,230,],[111,111,111,111,111,111,111,111,]),'STRING':([91,],[168,]),'ELSE':([260,275,],[263,276,]),'ELIF':([260,],[264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([0,],[2,]),'main_function':([0,2,],[3,9,]),'type_keyword':([0,14,15,26,28,29,31,32,34,96,97,98,114,254,255,259,266,267,273,277,],[4,17,17,17,58,58,58,58,58,58,58,58,17,58,58,58,58,58,58,58,]),'argument_list':([14,15,26,114,],[19,22,30,233,]),'argument':([14,15,26,114,],[20,20,20,20,]),'statement_list':([28,29,31,34,],[33,67,68,71,]),'statement':([28,29,31,34,98,254,255,266,273,277,],[34,34,34,34,183,257,258,269,274,278,]),'expression_statement':([28,29,31,34,98,254,255,266,273,277,],[35,35,35,35,35,35,35,35,35,35,]),'control_statement':([28,29,31,34,98,254,255,266,273,277,],[36,36,36,36,36,36,36,36,36,36,]),'return_statement':([28,29,31,34,98,254,255,266,273,277,],[37,37,37,37,37,37,37,37,37,37,]),'print_statement':([28,29,31,34,98,254,255,266,273,277,],[38,38,38,38,38,38,38,38,38,38,]),'expression':([28,29,31,32,34,96,97,98,254,255,259,266,267,273,277,],[39,39,39,69,39,181,182,39,39,39,262,39,270,39,39,]),'if_statement':([28,29,31,34,98,254,255,266,273,277,],[40,40,40,40,40,40,40,40,40,40,]),'while_statement':([28,29,31,34,98,254,255,266,273,277,],[41,41,41,41,41,41,41,41,41,41,]),'do_while_statement':([28,29,31,34,98,254,255,266,273,277,],[42,42,42,42,42,42,42,42,42,42,]),'assignment_expression':([28,29,31,32,34,96,97,98,254,255,259,266,267,273,277,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'logical_expression':([28,29,31,32,34,96,97,98,254,255,259,266,267,273,277,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'unary_expression':([28,29,31,32,34,96,97,98,254,255,259,266,267,273,277,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'arithmetic_expression':([28,29,31,32,34,96,97,98,100,184,254,255,259,266,267,273,277,],[52,52,52,52,52,52,52,52,190,246,52,52,52,52,52,52,52,]),'relational_expression':([28,29,31,32,34,66,92,93,94,95,96,97,98,112,113,254,255,259,266,267,273,277,],[53,53,53,53,53,123,169,172,177,180,53,53,53,228,231,53,53,53,53,53,53,53,]),'equality_expression':([28,29,31,32,34,66,92,93,94,95,96,97,98,112,113,254,255,259,266,267,273,277,],[54,54,54,54,54,122,171,174,175,178,54,54,54,229,232,54,54,54,54,54,54,54,]),'function_call':([28,29,31,32,34,96,97,98,100,184,254,255,259,266,267,273,277,],[60,60,60,60,60,60,60,60,191,247,60,60,60,60,60,60,60,]),'logical_or_expression':([28,29,31,32,34,66,96,97,98,254,255,259,266,267,273,277,],[61,61,61,61,61,120,61,61,61,61,61,61,61,61,61,61,]),'logical_and_expression':([28,29,31,32,34,66,96,97,98,254,255,259,266,267,273,277,],[62,62,62,62,62,119,62,62,62,62,62,62,62,62,62,62,]),'logical_not_expression':([28,29,31,32,34,96,97,98,254,255,259,266,267,273,277,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'number':([64,65,],[115,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function main_function','program',2,'p_program','new_parser.py',55),
  ('program -> main_function','program',1,'p_program','new_parser.py',56),
  ('main_function -> TYPE_INT MAIN LPAREN RPAREN LBRACE statement_list RBRACE','main_function',7,'p_main_function','new_parser.py',66),
  ('statement_list -> statement','statement_list',1,'p_statement_list','new_parser.py',73),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','new_parser.py',74),
  ('statement -> expression_statement','statement',1,'p_statement','new_parser.py',84),
  ('statement -> control_statement','statement',1,'p_statement','new_parser.py',85),
  ('statement -> return_statement','statement',1,'p_statement','new_parser.py',86),
  ('statement -> print_statement','statement',1,'p_statement','new_parser.py',87),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','new_parser.py',94),
  ('control_statement -> if_statement','control_statement',1,'p_control_statement','new_parser.py',101),
  ('control_statement -> while_statement','control_statement',1,'p_control_statement','new_parser.py',102),
  ('control_statement -> do_while_statement','control_statement',1,'p_control_statement','new_parser.py',103),
  ('type_keyword -> TYPE_INT','type_keyword',1,'p_type_keyword','new_parser.py',110),
  ('type_keyword -> TYPE_BOOL','type_keyword',1,'p_type_keyword','new_parser.py',111),
  ('type_keyword -> TYPE_FLOAT','type_keyword',1,'p_type_keyword','new_parser.py',112),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE','if_statement',7,'p_if_statement','new_parser.py',119),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','if_statement',11,'p_if_statement','new_parser.py',120),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELIF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','if_statement',18,'p_if_statement','new_parser.py',121),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE','while_statement',7,'p_while_statement','new_parser.py',209),
  ('do_while_statement -> DO LBRACE statement RBRACE WHILE LPAREN expression RPAREN SEMICOLON','do_while_statement',9,'p_do_while_statement','new_parser.py',227),
  ('return_statement -> RETURN LPAREN INTEGER RPAREN SEMICOLON','return_statement',5,'p_return_statement','new_parser.py',242),
  ('return_statement -> RETURN LPAREN FLOAT RPAREN SEMICOLON','return_statement',5,'p_return_statement','new_parser.py',243),
  ('return_statement -> RETURN LPAREN TRUE RPAREN SEMICOLON','return_statement',5,'p_return_statement','new_parser.py',244),
  ('return_statement -> RETURN LPAREN FALSE RPAREN SEMICOLON','return_statement',5,'p_return_statement','new_parser.py',245),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOLON','print_statement',5,'p_print_statement','new_parser.py',252),
  ('expression -> assignment_expression','expression',1,'p_expression','new_parser.py',259),
  ('expression -> logical_expression','expression',1,'p_expression','new_parser.py',260),
  ('expression -> unary_expression','expression',1,'p_expression','new_parser.py',261),
  ('expression -> arithmetic_expression','expression',1,'p_expression','new_parser.py',262),
  ('expression -> relational_expression','expression',1,'p_expression','new_parser.py',263),
  ('expression -> equality_expression','expression',1,'p_expression','new_parser.py',264),
  ('expression -> TRUE','expression',1,'p_expression','new_parser.py',265),
  ('expression -> FALSE','expression',1,'p_expression','new_parser.py',266),
  ('arithmetic_expression -> IDENTIFIER PLUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',274),
  ('arithmetic_expression -> IDENTIFIER PLUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',275),
  ('arithmetic_expression -> IDENTIFIER MODULUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',276),
  ('arithmetic_expression -> IDENTIFIER MINUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',277),
  ('arithmetic_expression -> IDENTIFIER MINUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',278),
  ('arithmetic_expression -> IDENTIFIER MINUS FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',279),
  ('arithmetic_expression -> IDENTIFIER MODULUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',280),
  ('arithmetic_expression -> IDENTIFIER MULTIPLY IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',281),
  ('arithmetic_expression -> IDENTIFIER MULTIPLY INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',282),
  ('arithmetic_expression -> IDENTIFIER MULTIPLY FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',283),
  ('arithmetic_expression -> IDENTIFIER DIVIDE IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',284),
  ('arithmetic_expression -> IDENTIFIER DIVIDE INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',285),
  ('arithmetic_expression -> IDENTIFIER DIVIDE FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',286),
  ('arithmetic_expression -> INTEGER PLUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',287),
  ('arithmetic_expression -> INTEGER MULTIPLY INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',288),
  ('arithmetic_expression -> INTEGER MINUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',289),
  ('arithmetic_expression -> INTEGER PLUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',290),
  ('arithmetic_expression -> INTEGER DIVIDE INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',291),
  ('arithmetic_expression -> INTEGER MODULUS IDENTIFIER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',292),
  ('arithmetic_expression -> INTEGER MODULUS INTEGER','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',293),
  ('arithmetic_expression -> FLOAT PLUS FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',294),
  ('arithmetic_expression -> FLOAT MINUS FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',295),
  ('arithmetic_expression -> FLOAT MULTIPLY FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',296),
  ('arithmetic_expression -> FLOAT DIVIDE FLOAT','arithmetic_expression',3,'p_arithmetic_expression','new_parser.py',297),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN INTEGER','assignment_expression',4,'p_assignment_expression','new_parser.py',310),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN FLOAT','assignment_expression',4,'p_assignment_expression','new_parser.py',311),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN TRUE','assignment_expression',4,'p_assignment_expression','new_parser.py',312),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN FALSE','assignment_expression',4,'p_assignment_expression','new_parser.py',313),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN arithmetic_expression','assignment_expression',4,'p_assignment_expression','new_parser.py',314),
  ('assignment_expression -> type_keyword IDENTIFIER ASSIGN function_call','assignment_expression',4,'p_assignment_expression','new_parser.py',315),
  ('assignment_expression -> IDENTIFIER ASSIGN INTEGER','assignment_expression',3,'p_assignment_expression','new_parser.py',316),
  ('assignment_expression -> IDENTIFIER ASSIGN FLOAT','assignment_expression',3,'p_assignment_expression','new_parser.py',317),
  ('assignment_expression -> IDENTIFIER ASSIGN TRUE','assignment_expression',3,'p_assignment_expression','new_parser.py',318),
  ('assignment_expression -> IDENTIFIER ASSIGN FALSE','assignment_expression',3,'p_assignment_expression','new_parser.py',319),
  ('assignment_expression -> IDENTIFIER ASSIGN arithmetic_expression','assignment_expression',3,'p_assignment_expression','new_parser.py',320),
  ('assignment_expression -> IDENTIFIER ASSIGN function_call','assignment_expression',3,'p_assignment_expression','new_parser.py',321),
  ('logical_expression -> logical_or_expression','logical_expression',1,'p_logical_expression','new_parser.py',333),
  ('logical_expression -> logical_and_expression','logical_expression',1,'p_logical_expression','new_parser.py',334),
  ('logical_expression -> logical_not_expression','logical_expression',1,'p_logical_expression','new_parser.py',335),
  ('logical_or_expression -> IDENTIFIER LOGICAL_OR IDENTIFIER','logical_or_expression',3,'p_logical_or_expression','new_parser.py',342),
  ('logical_or_expression -> IDENTIFIER LOGICAL_OR relational_expression','logical_or_expression',3,'p_logical_or_expression','new_parser.py',343),
  ('logical_or_expression -> IDENTIFIER LOGICAL_OR equality_expression','logical_or_expression',3,'p_logical_or_expression','new_parser.py',344),
  ('logical_or_expression -> relational_expression LOGICAL_OR IDENTIFIER','logical_or_expression',3,'p_logical_or_expression','new_parser.py',345),
  ('logical_or_expression -> relational_expression LOGICAL_OR relational_expression','logical_or_expression',3,'p_logical_or_expression','new_parser.py',346),
  ('logical_or_expression -> relational_expression LOGICAL_OR equality_expression','logical_or_expression',3,'p_logical_or_expression','new_parser.py',347),
  ('logical_or_expression -> equality_expression LOGICAL_OR IDENTIFIER','logical_or_expression',3,'p_logical_or_expression','new_parser.py',348),
  ('logical_or_expression -> equality_expression LOGICAL_OR relational_expression','logical_or_expression',3,'p_logical_or_expression','new_parser.py',349),
  ('logical_or_expression -> equality_expression LOGICAL_OR equality_expression','logical_or_expression',3,'p_logical_or_expression','new_parser.py',350),
  ('logical_and_expression -> IDENTIFIER LOGICAL_AND IDENTIFIER','logical_and_expression',3,'p_logical_and_expression','new_parser.py',358),
  ('logical_and_expression -> IDENTIFIER LOGICAL_AND relational_expression','logical_and_expression',3,'p_logical_and_expression','new_parser.py',359),
  ('logical_and_expression -> IDENTIFIER LOGICAL_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','new_parser.py',360),
  ('logical_and_expression -> relational_expression LOGICAL_AND IDENTIFIER','logical_and_expression',3,'p_logical_and_expression','new_parser.py',361),
  ('logical_and_expression -> relational_expression LOGICAL_AND relational_expression','logical_and_expression',3,'p_logical_and_expression','new_parser.py',362),
  ('logical_and_expression -> relational_expression LOGICAL_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','new_parser.py',363),
  ('logical_and_expression -> equality_expression LOGICAL_AND IDENTIFIER','logical_and_expression',3,'p_logical_and_expression','new_parser.py',364),
  ('logical_and_expression -> equality_expression LOGICAL_AND relational_expression','logical_and_expression',3,'p_logical_and_expression','new_parser.py',365),
  ('logical_and_expression -> equality_expression LOGICAL_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','new_parser.py',366),
  ('logical_not_expression -> LOGICAL_NOT logical_and_expression','logical_not_expression',2,'p_logical_not_expression','new_parser.py',374),
  ('logical_not_expression -> LOGICAL_NOT logical_or_expression','logical_not_expression',2,'p_logical_not_expression','new_parser.py',375),
  ('logical_not_expression -> LOGICAL_NOT IDENTIFIER','logical_not_expression',2,'p_logical_not_expression','new_parser.py',376),
  ('logical_not_expression -> LOGICAL_NOT equality_expression','logical_not_expression',2,'p_logical_not_expression','new_parser.py',377),
  ('logical_not_expression -> LOGICAL_NOT relational_expression','logical_not_expression',2,'p_logical_not_expression','new_parser.py',378),
  ('equality_expression -> IDENTIFIER EQUALS IDENTIFIER','equality_expression',3,'p_equality_expression','new_parser.py',386),
  ('equality_expression -> IDENTIFIER EQUALS INTEGER','equality_expression',3,'p_equality_expression','new_parser.py',387),
  ('equality_expression -> IDENTIFIER EQUALS FLOAT','equality_expression',3,'p_equality_expression','new_parser.py',388),
  ('equality_expression -> IDENTIFIER EQUALS TRUE','equality_expression',3,'p_equality_expression','new_parser.py',389),
  ('equality_expression -> IDENTIFIER EQUALS FALSE','equality_expression',3,'p_equality_expression','new_parser.py',390),
  ('equality_expression -> IDENTIFIER NOT_EQUALS IDENTIFIER','equality_expression',3,'p_equality_expression','new_parser.py',391),
  ('equality_expression -> IDENTIFIER NOT_EQUALS INTEGER','equality_expression',3,'p_equality_expression','new_parser.py',392),
  ('equality_expression -> IDENTIFIER NOT_EQUALS FLOAT','equality_expression',3,'p_equality_expression','new_parser.py',393),
  ('equality_expression -> IDENTIFIER NOT_EQUALS TRUE','equality_expression',3,'p_equality_expression','new_parser.py',394),
  ('equality_expression -> IDENTIFIER NOT_EQUALS FALSE','equality_expression',3,'p_equality_expression','new_parser.py',395),
  ('relational_expression -> IDENTIFIER GREATER_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',406),
  ('relational_expression -> IDENTIFIER GREATER_THAN INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',407),
  ('relational_expression -> IDENTIFIER GREATER_THAN FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',408),
  ('relational_expression -> IDENTIFIER LESS_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',409),
  ('relational_expression -> IDENTIFIER LESS_THAN INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',410),
  ('relational_expression -> IDENTIFIER LESS_THAN FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',411),
  ('relational_expression -> IDENTIFIER LESS_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',412),
  ('relational_expression -> IDENTIFIER LESS_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',413),
  ('relational_expression -> IDENTIFIER LESS_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',414),
  ('relational_expression -> IDENTIFIER GREATER_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',415),
  ('relational_expression -> IDENTIFIER GREATER_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',416),
  ('relational_expression -> IDENTIFIER GREATER_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',417),
  ('relational_expression -> INTEGER GREATER_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',418),
  ('relational_expression -> INTEGER GREATER_THAN INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',419),
  ('relational_expression -> INTEGER GREATER_THAN FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',420),
  ('relational_expression -> INTEGER LESS_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',421),
  ('relational_expression -> INTEGER LESS_THAN INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',422),
  ('relational_expression -> INTEGER LESS_THAN FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',423),
  ('relational_expression -> INTEGER LESS_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',424),
  ('relational_expression -> INTEGER LESS_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',425),
  ('relational_expression -> INTEGER LESS_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',426),
  ('relational_expression -> INTEGER GREATER_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',427),
  ('relational_expression -> INTEGER GREATER_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',428),
  ('relational_expression -> INTEGER GREATER_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',429),
  ('relational_expression -> FLOAT GREATER_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',430),
  ('relational_expression -> FLOAT GREATER_THAN INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',431),
  ('relational_expression -> FLOAT GREATER_THAN FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',432),
  ('relational_expression -> FLOAT LESS_THAN IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',433),
  ('relational_expression -> FLOAT LESS_THAN INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',434),
  ('relational_expression -> FLOAT LESS_THAN FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',435),
  ('relational_expression -> FLOAT LESS_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',436),
  ('relational_expression -> FLOAT LESS_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',437),
  ('relational_expression -> FLOAT LESS_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',438),
  ('relational_expression -> FLOAT GREATER_THAN_OR_EQUAL IDENTIFIER','relational_expression',3,'p_relational_expression','new_parser.py',439),
  ('relational_expression -> FLOAT GREATER_THAN_OR_EQUAL INTEGER','relational_expression',3,'p_relational_expression','new_parser.py',440),
  ('relational_expression -> FLOAT GREATER_THAN_OR_EQUAL FLOAT','relational_expression',3,'p_relational_expression','new_parser.py',441),
  ('unary_expression -> MINUS number','unary_expression',2,'p_unary_expression','new_parser.py',447),
  ('unary_expression -> PLUS number','unary_expression',2,'p_unary_expression','new_parser.py',448),
  ('unary_expression -> function_call','unary_expression',1,'p_unary_expression','new_parser.py',449),
  ('unary_expression -> IDENTIFIER','unary_expression',1,'p_unary_expression','new_parser.py',450),
  ('unary_expression -> LPAREN expression RPAREN','unary_expression',3,'p_unary_expression','new_parser.py',451),
  ('function -> type_keyword IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE','function',8,'p_function','new_parser.py',465),
  ('function -> VOID IDENTIFIER LPAREN argument_list RPAREN LBRACE statement_list RBRACE','function',8,'p_function','new_parser.py',466),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','new_parser.py',473),
  ('argument_list -> argument','argument_list',1,'p_argument_list','new_parser.py',480),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','new_parser.py',481),
  ('argument -> type_keyword IDENTIFIER','argument',2,'p_argument','new_parser.py',491),
  ('argument -> IDENTIFIER','argument',1,'p_argument','new_parser.py',492),
  ('number -> INTEGER','number',1,'p_number','new_parser.py',501),
  ('number -> FLOAT','number',1,'p_number','new_parser.py',502),
]
